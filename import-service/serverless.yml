service: import-service

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: eu-west-1

  environment:
    SQS_URL:
      Ref: catalogItemsQueue
    SNS_ARN:
      Ref: createProductTopic

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: "s3:ListBucket"
          Resource:
                    - "arn:aws:s3:::products-bucket-aws-my"
        - Effect: "Allow"
          Action:
                 - "s3:*"
          Resource:
                    - "arn:aws:s3:::products-bucket-aws-my/*"
        - Effect: "Allow"
          Action:
                 - "sqs:*"
          Resource:
                  - Fn::GetAtt: [ catalogItemsQueue, Arn ]
        - Effect: "Allow"
          Action: "sns:*"
          Resource:
           Ref: createProductTopic

resources:
  Resources:
    catalogItemsQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: catalog-items-queue
    createProductTopic:
      Type: "AWS::SNS::Topic"
      Properties:
        TopicName: create-product-topic
    SNSSubscription:
      Type: "AWS::SNS::Subscription"
      Properties:
        Endpoint: sdk256teplo@gmail.com
        Protocol: email
        TopicArn:
          Ref: createProductTopic

plugins:
  - serverless-offline

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          request:
            parameters:
              querystrings:
                name: true
          authorizer:
            name: basicAuthorizer
            arn: "arn:aws:lambda:eu-west-1:708775756279:function:authorization-service-dev-basicAuthorizer"
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
  importFileParser:
    handler: handler.importFileParser
    events:
        - s3:
          bucket: products-bucket-aws-my
          event: s3:ObjectCreated:*
          rules:
                - prefix: uploaded/
          existing: true
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - catalogItemsQueue
              - Arn
          batchSize: 5

